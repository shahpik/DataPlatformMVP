jobs:
  - deployment: Deploy
    displayName: Deploy Azure Data Services
    environment: '${{ parameters.environment }}'
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureCLI@2
              displayName: Create Resource Group
              inputs:
                azureSubscription: '${{ parameters.azureServiceConnection }}'
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  echo "Creating Resource Group"
                  az group create \
                      --name $(ResourceGroup) \
                      --location $(Region) 
      

            - task: AzureCLI@2
              displayName: Create Data Lake Store Gen2
              inputs:
                    azureSubscription: '${{ parameters.azureServiceConnection }}'
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                      echo "Creating Data Lake Store Gen2"
                      az deployment group create \
                        --resource-group $(resourceGroup) \
                        --name "StorageAccount" \
                        --template-file "$(Pipeline.Workspace)/deploy/arm/Microsoft.StorageAccount/azuredeploy.json" \
                        --parameters \
                            storageAccountName=$(dataLakeStorageAccountName) \
                            isHnsEnabled='true' \
                            storageSku='Standard_RAGRS' \
                            logAnalyticsWorkspaceName=$(logAnalyticsWorkspaceName) \
                            resourceTags=@${{parameters.resourceTagsFilePath}}
                            

            - task: AzureCLI@2
              displayName: Create Data Factory
              inputs:
                azureSubscription: '${{ parameters.azureServiceConnection }}'
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  echo "Creating Azure Data Factory '$(dataFactoryName)'"
                  az deployment group create \
                        --resource-group $(resourceGroup) \
                        --name "AzureDataFactory" \
                        --template-file "$(Pipeline.Workspace)/deploy/arm/Microsoft.DataFactory/azuredeploy.json" \
                        --parameters \
                            dataFactoryName=$(dataFactoryName) \
                            workspaceName=$(logAnalyticsWorkspaceName) \
                            dataFactoryIRName=$(dataFactoryIntegrationRuntime)

            - task: AzureCLI@2
              displayName: Create Key Vaults
              inputs:
                azureSubscription: '${{ parameters.azureServiceConnection }}'
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |

                 echo "Creating Key Vault for Data platform"
                 az deployment group create \
                        --resource-group $(resourceGroup) \
                        --name "KeyVault" \
                        --template-file "$(Pipeline.Workspace)/deploy/arm/Microsoft.KeyVault/azuredeploy.json" \
                        --parameters \
                            keyVaultName=$(KeyVaultData) \
                            objectId=$(sqlAzureADGroupObjectID) \
                            logAnalyticsWorkspaceName=$(logAnalyticsWorkspaceName) \
                            logAnalyticsDiagnosticName='akvdiagnostics'


                 echo "Creating Key Vault for Machine Learning Service"
                 az deployment group create \
                        --resource-group $(resourceGroup) \
                        --name "KeyVaultML" \
                        --template-file "$(Pipeline.Workspace)/deploy/arm/Microsoft.KeyVault/azuredeploy.json" \
                        --parameters \
                            keyVaultName=$(KeyVaultML) \
                            objectId=$(sqlAzureADGroupObjectID) \
                            logAnalyticsWorkspaceName=$(logAnalyticsWorkspaceName) \
                            logAnalyticsDiagnosticName='akvmldiagnostics'


            - task: AzureCLI@2
              displayName: Create SQL Server
              inputs:
                    azureSubscription: '${{ parameters.azureServiceConnection }}'
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                      echo "Creating SQL Server '$(sqlServerName)'"
                      az deployment group create \
                        --resource-group $(resourceGroup) \
                        --name "SQLServer" \
                        --template-file "$(Pipeline.Workspace)/deploy/arm/Microsoft.SqlServer/azuredeploy.json" \
                        --parameters \
                            sqlServerName=$(sqlServerName) \
                            databaseName=$(sqlServerDataBaseName) \
                            sqlAdministratorLogin=$(sqlServerAdminUserName) \
                            sqlAdministratorLoginPassword=$(sqlServerAdminPassword) \
                            location=$(region) \
                            adTenantID=$(sqlAzureADGroupTenantID) \
                            adObjectID=$(sqlAzureADGroupObjectID) \
                            adLogin=$(sqlAzureADGroupLoginName) \
                            logAnalyticsWorkspaceName=$(logAnalyticsWorkspaceName)



            - task: AzureCLI@2
              displayName: 'Create Databricks'
              inputs:
                      azureSubscription: '${{ parameters.azureServiceConnection }}'
                      scriptType: 'bash'
                      scriptLocation: 'inlineScript'
                      inlineScript: |
                        echo "Creating Prerequisites for Databricks workspace '$(databricksWorkspaceName)'"
                        echo "Provisioning subnets in existing VNET $(cobVnetExisting)"
                        az deployment group create \
                          --resource-group "$(cobVnetExistingRG)" \
                          --name "DatabricksPrerequisites" \
                          --template-file "$(Pipeline.Workspace)/deploy/arm/Microsoft.Databricks/azuredeploypreq.json" \
                          --parameters \
                                existingVnetName=$(cobVnetExisting) \
                                customPublicSubnetName=$(databricksPublicSubNet) \
                                customPublicSubNetAddressPrefixes=$(databricksPublicSubNetAddressPrefixes) \
                                customPublicSubNetNSGName=$(databricksPublicNSGName) \
                                customPrivateSubnetName=$(databricksPrivateSubNet) \
                                customPrivateSubNetAddressPrefixes=$(databricksPrivateSubNetAddressPrefixes) \
                                customPrivateSubNetNSGName=$(databricksPrivateNSGName)

                        echo "Creating Databricks workspace '$(databricksWorkspaceName)'"
                        az deployment group create \
                          --resource-group "$(resourceGroup)" \
                          --name "Databricks" \
                          --template-file "$(Pipeline.Workspace)/deploy/arm/Microsoft.Databricks/azuredeploy.json" \
                          --parameters \
                                workspaceName=$(databricksWorkspaceName) \
                                customVirtualNetworkId=$(cobVnetExistingResourceId) \
                                customPublicSubnetName=$(databricksPublicSubNet) \
                                customPrivateSubnetName=$(databricksPrivateSubNet)


            - task: AzureCLI@2
              displayName: Create Machine Learning WS
              inputs:
                    azureSubscription: '${{ parameters.azureServiceConnection }}'
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                        echo "Creating Machine Learning Subnet for Private EndPoint with prefix $(mlPrivateSubNetAddressPrefix)"
                        az network vnet subnet create \
                            --name $(MlPrivateSubNetName) \
                            --resource-group $(cobVnetExistingRG) \
                            --address-prefixes $(mlPrivateSubNetAddressPrefix) \
                            --vnet-name $(cobVnetExisting) \
                            --disable-private-endpoint-network-policies true


                        echo "Creating Machine Learning Workspace"
                        az deployment group create \
                          --resource-group "$(resourceGroup)" \
                          --name "MachineLearningServices" \
                          --template-file "$(Pipeline.Workspace)/deploy/arm/Microsoft.MachineLearningServices/azuredeploy.json" \
                          --parameters \
                              workspaceName=$(mlWorkspaceName) \
                              location=$(region) \
                              privateEndpointType='AutoApproval' \
                              vnetName=$(cobVnetExisting) \
                              vnetOption='existing' \
                              vnetResourceGroupName=$(cobVnetExistingRG) \
                              subnetName=$(mlPrivateSubNetName) \
                              subnetOption='existing' \
                              privateEndpointName=$(mlPrivateEndPoint) \
                              keyVaultOption='new' \
                              keyVaultResourceGroupName=$(resourceGroup) \
                              keyVaultName=$(keyVaultML) \
                              logAnalyticsworkspaceName=$(logAnalyticsWorkspaceName) \
                              applicationInsightsOption='new' \
                              applicationInsightsResourceGroupName=$(resourceGroup) \
                              applicationInsightsName=$(mlAppInsightsName) \
                              storageAccountOption='new' \
                              storageAccountResourceGroupName=$(resourceGroup) \
                              storageAccountName=$(mlStorageAccountName)

#            - task: AzureCLI@2
#              displayName: Create Event Hub
#              inputs:
#                    azureSubscription: '${{ parameters.azureServiceConnection }}'
#                    scriptType: bash
#                    scriptLocation: inlineScript
#                    inlineScript: |
#                      echo "Creating Event Hub Namespace"
#                      az eventhubs namespace create \
#                        --name $(eventHubNameSpace) \
#                        --resource-group $(resourceGroup) \
#                        --location $(region)

#                      echo "Creating Event Hub"
#                      az eventhubs eventhub create \
#                        --name $(eventHubName) \
#                        --resource-group $(resourceGroup) \
#                        --namespace-name $(eventHubNameSpace)

#            - task: AzureCLI@2
#              displayName: 'Create IOT Hub'
#              inputs:
#                      azureSubscription: '${{ parameters.azureServiceConnection }}'
#                      scriptType: 'bash'
#                      scriptLocation: 'inlineScript'
#                      inlineScript: |
#                        echo "Creating IOT Hub"
#                        az deployment group create \
#                          --resource-group $(resourceGroup) \
#                          --name "IOTHub" \
#                          --template-file "$(Pipeline.Workspace)/deploy/arm/Microsoft.IotHub/azuredeploy.json" \
#                          --parameters \
#                                iotHubName=$(iotHubName) \
#                                location=$(region) \
#                                storageAccountName=$(iotHubStorageAccountName)

  

     

